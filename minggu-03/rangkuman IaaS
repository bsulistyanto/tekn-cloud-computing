PLATFORM AS A SERVICE
Platform as a service (PaaS) or application platform as a service (aPaaS) or platform-
based service is a category of cloud computing services that provides a platform allowing customers
to develop, run, and manage applications without the complexity of building and maintaining the
infrastructure typically associated with developing and launching an app.
Communications platform as a service
A communications platform as a service (CPaaS) is a cloud-based platform that enables
developers to add real-time communications features (voice, video, and messaging) in their own
applications without building back-end infrastructure and interfaces. Also, CPaaS and hardware and
software specifications are specifically designed to support (tele)communications applications. These
applications and their usage are much more sensitive to jitter, latency and packet losses. Hosted
PABX, cellular networks, (near real time) applications typically are deployed on CPaaS platforms.
Common PaaS scenarios
- Development framework. PaaS provides a framework that developers can build upon to
develop or customize cloud-based applications. Similar to the way you create an Excel macro,
PaaS lets developers create applications using built-in software components. Cloud features
such as scalability, high-availability, and multi-tenant capability are included, reducing the
amount of coding that developers must do.
- Analytics or business intelligence. Tools provided as a service with PaaS allow organizations
to analyze and mine their data, finding insights and patterns and predicting outcomes to improve
forecasting, product design decisions, investment returns, and other business decisions.
- Additional services. PaaS providers may offer other services that enhance applications, such
as workflow, directory, security, and scheduling.
Advantages of PaaS
- Cut coding time. PaaS development tools can cut the time it takes to code new apps with pre-
coded application components built into the platform, such as workflow, directory services,
security features, search, and so on.
- Add development capabilities without adding staff. Platform as a Service components can
give your development team new capabilities without your needing to add staff having the
required skills.
- Develop for multiple platforms—including mobile—more easily. Some service providers
give you development options for multiple platforms, such as computers, mobile devices, and
browsers making cross-platform apps quicker and easier to develop.
- Use sophisticated tools affordably. A pay-as-you-go model makes it possible for individuals or
organizations to use sophisticated development software and business intelligence and analytics
tools that they could not afford to purchase outright.
- Support geographically distributed development teams. Because the development
environment is accessed over the Internet, development teams can work together on projects
even when team members are in remote locations.
- Efficiently manage the application lifecycle. PaaS provides all of the capabilities that you
need to support the complete web application lifecycle: building, testing, deploying, managing,
and updating within the same integrated environment.
Benefits
 Faster time to market: With PaaS, there’s no need to purchase and install the hardware and
software you’ll use to build and maintain your application development platform and no need for
development teams to wait while you do this. You simply tap into the cloud service provider’s
PaaS resources and begin developing immediately.
 Faster, easier, less-risky adoption of a wider range of resources: PaaS platforms typically
include access to a greater variety of choices up and down the application development stack—
operating systems, middleware, and databases, and tools such as code libraries and app
components—than you can affordably or practically maintain on-premises.
 Easy, cost-effective scalability: If an application developed and hosted on-premises starts
getting more traffic, you’ll need to purchase more computing, storage, and
even network hardware to meet the demand, which you may not be able to do quickly enough
and can be wasteful (since you typically purchase more than you need).
 Lower costs: Because there’s no infrastructure to build, your upfront costs are lower. Costs are
also lower and more predictable because most PaaS providers charge customers based on
usage.
Open source PaaS and Kubernetes
An open source PaaS allows developers and users to contribute and share source code and
extensions. Cloud Foundry (link resides outside IBM) and OpenShift (link resides outside IBM) are two
popular open source PaaS platforms.
Cloud native and PaaS
Cloud native is less about where an application resides and more about how it is built and
deployed, but cloud native apps generally follow a microservices architecture and make use of such
cloud technologies as containers. Because cloud native applications typically include new and modern
methods of application development, using a PaaS model makes developing cloud native apps much
easier, and allows you to innovate much faster.
PaaS and IBM Cloud
IBM provides a rich and scalable PaaS for developing cloud native applications from scratch or
modernizing existing applications to benefit from the flexibility and scalability of the cloud. Services
include IBM Cloud Kubernetes Service, a fully-managed container orchestration solution; Red Hat
OpenShift on IBM Cloud; IBM Cloudant and IBM Cloud Databases for PostgreSQL; and much more.
IBM Cloud Foundry is IBM’s version of the open source PaaS for building, testing, deploying, and
scaling applications. And the IBM Watson platform lets you deploy AI applications wherever your data
resides—on any cloud or on your own private cloud platform.
Dirangkum oleh :
205411159_Bambang Sulistyanto
